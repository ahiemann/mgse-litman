/**
 * generated by Xtext 2.21.0
 */
package org.xtext.htwg.litMan.impl;

import org.eclipse.emf.ecore.EAttribute;
import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.EPackage;
import org.eclipse.emf.ecore.EReference;

import org.eclipse.emf.ecore.impl.EPackageImpl;

import org.xtext.htwg.litMan.Author;
import org.xtext.htwg.litMan.Book;
import org.xtext.htwg.litMan.JournalArticle;
import org.xtext.htwg.litMan.ListAuthors;
import org.xtext.htwg.litMan.LitMan;
import org.xtext.htwg.litMan.LitManFactory;
import org.xtext.htwg.litMan.LitManPackage;
import org.xtext.htwg.litMan.LitTypes;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model <b>Package</b>.
 * <!-- end-user-doc -->
 * @generated
 */
public class LitManPackageImpl extends EPackageImpl implements LitManPackage
{
  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass litManEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass litTypesEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass bookEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass journalArticleEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass authorEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass listAuthorsEClass = null;

  /**
   * Creates an instance of the model <b>Package</b>, registered with
   * {@link org.eclipse.emf.ecore.EPackage.Registry EPackage.Registry} by the package
   * package URI value.
   * <p>Note: the correct way to create the package is via the static
   * factory method {@link #init init()}, which also performs
   * initialization of the package, or returns the registered package,
   * if one already exists.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.eclipse.emf.ecore.EPackage.Registry
   * @see org.xtext.htwg.litMan.LitManPackage#eNS_URI
   * @see #init()
   * @generated
   */
  private LitManPackageImpl()
  {
    super(eNS_URI, LitManFactory.eINSTANCE);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private static boolean isInited = false;

  /**
   * Creates, registers, and initializes the <b>Package</b> for this model, and for any others upon which it depends.
   *
   * <p>This method is used to initialize {@link LitManPackage#eINSTANCE} when that field is accessed.
   * Clients should not invoke it directly. Instead, they should simply access that field to obtain the package.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #eNS_URI
   * @see #createPackageContents()
   * @see #initializePackageContents()
   * @generated
   */
  public static LitManPackage init()
  {
    if (isInited) return (LitManPackage)EPackage.Registry.INSTANCE.getEPackage(LitManPackage.eNS_URI);

    // Obtain or create and register package
    Object registeredLitManPackage = EPackage.Registry.INSTANCE.get(eNS_URI);
    LitManPackageImpl theLitManPackage = registeredLitManPackage instanceof LitManPackageImpl ? (LitManPackageImpl)registeredLitManPackage : new LitManPackageImpl();

    isInited = true;

    // Create package meta-data objects
    theLitManPackage.createPackageContents();

    // Initialize created meta-data
    theLitManPackage.initializePackageContents();

    // Mark meta-data to indicate it can't be changed
    theLitManPackage.freeze();

    // Update the registry and return the package
    EPackage.Registry.INSTANCE.put(LitManPackage.eNS_URI, theLitManPackage);
    return theLitManPackage;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getLitMan()
  {
    return litManEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getLitMan_Literatur()
  {
    return (EReference)litManEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getLitTypes()
  {
    return litTypesEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getLitTypes_Title()
  {
    return (EAttribute)litTypesEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getLitTypes_Authors()
  {
    return (EReference)litTypesEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getLitTypes_Pages()
  {
    return (EAttribute)litTypesEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getLitTypes_Date()
  {
    return (EAttribute)litTypesEClass.getEStructuralFeatures().get(3);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getBook()
  {
    return bookEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getJournalArticle()
  {
    return journalArticleEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getJournalArticle_Volume()
  {
    return (EAttribute)journalArticleEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getJournalArticle_Issue()
  {
    return (EAttribute)journalArticleEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getAuthor()
  {
    return authorEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getAuthor_Firstname()
  {
    return (EAttribute)authorEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getAuthor_Lastname()
  {
    return (EAttribute)authorEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getListAuthors()
  {
    return listAuthorsEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getListAuthors_Authors()
  {
    return (EReference)listAuthorsEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public LitManFactory getLitManFactory()
  {
    return (LitManFactory)getEFactoryInstance();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private boolean isCreated = false;

  /**
   * Creates the meta-model objects for the package.  This method is
   * guarded to have no affect on any invocation but its first.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void createPackageContents()
  {
    if (isCreated) return;
    isCreated = true;

    // Create classes and their features
    litManEClass = createEClass(LIT_MAN);
    createEReference(litManEClass, LIT_MAN__LITERATUR);

    litTypesEClass = createEClass(LIT_TYPES);
    createEAttribute(litTypesEClass, LIT_TYPES__TITLE);
    createEReference(litTypesEClass, LIT_TYPES__AUTHORS);
    createEAttribute(litTypesEClass, LIT_TYPES__PAGES);
    createEAttribute(litTypesEClass, LIT_TYPES__DATE);

    bookEClass = createEClass(BOOK);

    journalArticleEClass = createEClass(JOURNAL_ARTICLE);
    createEAttribute(journalArticleEClass, JOURNAL_ARTICLE__VOLUME);
    createEAttribute(journalArticleEClass, JOURNAL_ARTICLE__ISSUE);

    authorEClass = createEClass(AUTHOR);
    createEAttribute(authorEClass, AUTHOR__FIRSTNAME);
    createEAttribute(authorEClass, AUTHOR__LASTNAME);

    listAuthorsEClass = createEClass(LIST_AUTHORS);
    createEReference(listAuthorsEClass, LIST_AUTHORS__AUTHORS);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private boolean isInitialized = false;

  /**
   * Complete the initialization of the package and its meta-model.  This
   * method is guarded to have no affect on any invocation but its first.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void initializePackageContents()
  {
    if (isInitialized) return;
    isInitialized = true;

    // Initialize package
    setName(eNAME);
    setNsPrefix(eNS_PREFIX);
    setNsURI(eNS_URI);

    // Create type parameters

    // Set bounds for type parameters

    // Add supertypes to classes
    bookEClass.getESuperTypes().add(this.getLitTypes());
    journalArticleEClass.getESuperTypes().add(this.getLitTypes());

    // Initialize classes and features; add operations and parameters
    initEClass(litManEClass, LitMan.class, "LitMan", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getLitMan_Literatur(), this.getLitTypes(), null, "literatur", null, 0, -1, LitMan.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(litTypesEClass, LitTypes.class, "LitTypes", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getLitTypes_Title(), ecorePackage.getEString(), "title", null, 0, 1, LitTypes.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getLitTypes_Authors(), this.getListAuthors(), null, "authors", null, 0, 1, LitTypes.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getLitTypes_Pages(), ecorePackage.getEString(), "pages", null, 0, 1, LitTypes.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getLitTypes_Date(), ecorePackage.getEString(), "date", null, 0, 1, LitTypes.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(bookEClass, Book.class, "Book", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(journalArticleEClass, JournalArticle.class, "JournalArticle", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getJournalArticle_Volume(), ecorePackage.getEInt(), "volume", null, 0, 1, JournalArticle.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getJournalArticle_Issue(), ecorePackage.getEInt(), "issue", null, 0, 1, JournalArticle.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(authorEClass, Author.class, "Author", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getAuthor_Firstname(), ecorePackage.getEString(), "firstname", null, 0, 1, Author.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getAuthor_Lastname(), ecorePackage.getEString(), "lastname", null, 0, 1, Author.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(listAuthorsEClass, ListAuthors.class, "ListAuthors", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getListAuthors_Authors(), this.getAuthor(), null, "authors", null, 0, -1, ListAuthors.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    // Create resource
    createResource(eNS_URI);
  }

} //LitManPackageImpl
