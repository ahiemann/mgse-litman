/**
 * generated by Xtext 2.21.0
 */
package org.xtext.htwg.litMan.impl;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.xtext.htwg.litMan.ListAuthors;
import org.xtext.htwg.litMan.LitManPackage;
import org.xtext.htwg.litMan.LitTypes;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Lit Types</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.xtext.htwg.litMan.impl.LitTypesImpl#getTitle <em>Title</em>}</li>
 *   <li>{@link org.xtext.htwg.litMan.impl.LitTypesImpl#getAuthors <em>Authors</em>}</li>
 *   <li>{@link org.xtext.htwg.litMan.impl.LitTypesImpl#getPages <em>Pages</em>}</li>
 *   <li>{@link org.xtext.htwg.litMan.impl.LitTypesImpl#getDate <em>Date</em>}</li>
 * </ul>
 *
 * @generated
 */
public class LitTypesImpl extends MinimalEObjectImpl.Container implements LitTypes
{
  /**
   * The default value of the '{@link #getTitle() <em>Title</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getTitle()
   * @generated
   * @ordered
   */
  protected static final String TITLE_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getTitle() <em>Title</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getTitle()
   * @generated
   * @ordered
   */
  protected String title = TITLE_EDEFAULT;

  /**
   * The cached value of the '{@link #getAuthors() <em>Authors</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getAuthors()
   * @generated
   * @ordered
   */
  protected ListAuthors authors;

  /**
   * The default value of the '{@link #getPages() <em>Pages</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getPages()
   * @generated
   * @ordered
   */
  protected static final String PAGES_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getPages() <em>Pages</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getPages()
   * @generated
   * @ordered
   */
  protected String pages = PAGES_EDEFAULT;

  /**
   * The default value of the '{@link #getDate() <em>Date</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getDate()
   * @generated
   * @ordered
   */
  protected static final String DATE_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getDate() <em>Date</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getDate()
   * @generated
   * @ordered
   */
  protected String date = DATE_EDEFAULT;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected LitTypesImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return LitManPackage.Literals.LIT_TYPES;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getTitle()
  {
    return title;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setTitle(String newTitle)
  {
    String oldTitle = title;
    title = newTitle;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, LitManPackage.LIT_TYPES__TITLE, oldTitle, title));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public ListAuthors getAuthors()
  {
    return authors;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetAuthors(ListAuthors newAuthors, NotificationChain msgs)
  {
    ListAuthors oldAuthors = authors;
    authors = newAuthors;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, LitManPackage.LIT_TYPES__AUTHORS, oldAuthors, newAuthors);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setAuthors(ListAuthors newAuthors)
  {
    if (newAuthors != authors)
    {
      NotificationChain msgs = null;
      if (authors != null)
        msgs = ((InternalEObject)authors).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - LitManPackage.LIT_TYPES__AUTHORS, null, msgs);
      if (newAuthors != null)
        msgs = ((InternalEObject)newAuthors).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - LitManPackage.LIT_TYPES__AUTHORS, null, msgs);
      msgs = basicSetAuthors(newAuthors, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, LitManPackage.LIT_TYPES__AUTHORS, newAuthors, newAuthors));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getPages()
  {
    return pages;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setPages(String newPages)
  {
    String oldPages = pages;
    pages = newPages;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, LitManPackage.LIT_TYPES__PAGES, oldPages, pages));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getDate()
  {
    return date;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setDate(String newDate)
  {
    String oldDate = date;
    date = newDate;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, LitManPackage.LIT_TYPES__DATE, oldDate, date));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case LitManPackage.LIT_TYPES__AUTHORS:
        return basicSetAuthors(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case LitManPackage.LIT_TYPES__TITLE:
        return getTitle();
      case LitManPackage.LIT_TYPES__AUTHORS:
        return getAuthors();
      case LitManPackage.LIT_TYPES__PAGES:
        return getPages();
      case LitManPackage.LIT_TYPES__DATE:
        return getDate();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case LitManPackage.LIT_TYPES__TITLE:
        setTitle((String)newValue);
        return;
      case LitManPackage.LIT_TYPES__AUTHORS:
        setAuthors((ListAuthors)newValue);
        return;
      case LitManPackage.LIT_TYPES__PAGES:
        setPages((String)newValue);
        return;
      case LitManPackage.LIT_TYPES__DATE:
        setDate((String)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case LitManPackage.LIT_TYPES__TITLE:
        setTitle(TITLE_EDEFAULT);
        return;
      case LitManPackage.LIT_TYPES__AUTHORS:
        setAuthors((ListAuthors)null);
        return;
      case LitManPackage.LIT_TYPES__PAGES:
        setPages(PAGES_EDEFAULT);
        return;
      case LitManPackage.LIT_TYPES__DATE:
        setDate(DATE_EDEFAULT);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case LitManPackage.LIT_TYPES__TITLE:
        return TITLE_EDEFAULT == null ? title != null : !TITLE_EDEFAULT.equals(title);
      case LitManPackage.LIT_TYPES__AUTHORS:
        return authors != null;
      case LitManPackage.LIT_TYPES__PAGES:
        return PAGES_EDEFAULT == null ? pages != null : !PAGES_EDEFAULT.equals(pages);
      case LitManPackage.LIT_TYPES__DATE:
        return DATE_EDEFAULT == null ? date != null : !DATE_EDEFAULT.equals(date);
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (title: ");
    result.append(title);
    result.append(", pages: ");
    result.append(pages);
    result.append(", date: ");
    result.append(date);
    result.append(')');
    return result.toString();
  }

} //LitTypesImpl
